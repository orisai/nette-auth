extensions:
	http: Nette\Bridges\HttpDI\HttpExtension
	session: Nette\Bridges\HttpDI\SessionExtension

services:
	# storages
	auth.storage.session: OriNette\Auth\Http\SessionLoginStorage
	auth.storage.array: Orisai\Auth\Authentication\ArrayLoginStorage

	# policies
	policy.article.edit: Tests\OriNette\Auth\Doubles\ArticleEditPolicy
	policy.article.edit.owned: Tests\OriNette\Auth\Doubles\ArticleEditOwnedPolicy

	# policies manager
	auth.policyManager:
		factory: OriNette\Auth\DI\LazyPolicyManager
		arguments:
			serviceMap:
				article.edit: policy.article.edit
				article.edit.owned: policy.article.edit.owned

	# front firewall
	auth.front.dataBuilder:
		factory: Orisai\Auth\Authorization\AuthorizationDataBuilder
		setup:
			- addRole(editor)
			- addPrivilege(article.edit.all)
			- addPrivilege(article.edit.owned)
			- allow(editor, article)
	auth.front.authorizer:
		factory: Orisai\Auth\Authorization\PrivilegeAuthorizer
		arguments:
			data: @auth.front.dataBuilder::build()
	auth.front.refresher: Tests\OriNette\Auth\Doubles\AlwaysPassIdentityRefresher
	auth.front.firewall:
		factory: Orisai\Auth\Authentication\SimpleFirewall
		arguments:
			storage: @auth.storage.session
			refresher: @auth.front.refresher
			authorizer: @auth.front.authorizer
			namespace: front

	# admin firewall
	auth.admin.dataBuilder: Orisai\Auth\Authorization\AuthorizationDataBuilder
	auth.admin.authorizer:
		factory: Orisai\Auth\Authorization\PrivilegeAuthorizer
		arguments:
			data: @auth.admin.dataBuilder::build()
	auth.admin.refresher: Tests\OriNette\Auth\Doubles\AlwaysPassIdentityRefresher
	auth.admin.firewall:
		factory: Orisai\Auth\Authentication\SimpleFirewall
		arguments:
			storage: @auth.storage.session
			refresher: @auth.admin.refresher
			authorizer: @auth.admin.authorizer
			namespace: admin

	# api firewall
	auth.api.dataBuilder: Orisai\Auth\Authorization\AuthorizationDataBuilder
	auth.api.authorizerCreator: Tests\OriNette\Auth\Doubles\PrivilegeAuthorizerCreator
	auth.api.authorizer: @auth.api.authorizerCreator::create(builder: @auth.api.dataBuilder)
	auth.api.refresher: Tests\OriNette\Auth\Doubles\AlwaysPassIdentityRefresher
	auth.api.firewall:
		factory: Orisai\Auth\Authentication\SimpleFirewall
		arguments:
			storage: @auth.storage.array
			refresher: @auth.api.refresher
			authorizer: @auth.api.authorizer
			namespace: api
